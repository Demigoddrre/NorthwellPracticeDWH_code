-- Use the correct database
USE NorthwellPracticeDWH;
GO

-- KPI 1: Total Revenue by Region
-- This query calculates the total revenue generated by each region
SELECT 
    r.RegionName AS Region,
    SUM(s.Revenue) AS TotalRevenue
FROM FactSales s
JOIN DimRegions r ON s.RegionID = r.RegionID
GROUP BY r.RegionName
ORDER BY TotalRevenue DESC;

-- KPI 2: Total Revenue by Product
-- This query calculates the total revenue generated by each product
SELECT 
    p.ProductName AS Product,
    SUM(s.Revenue) AS TotalRevenue
FROM FactSales s
JOIN DimProducts p ON s.ProductID = p.ProductID
GROUP BY p.ProductName
ORDER BY TotalRevenue DESC;

-- KPI 3: Daily Revenue Trend
-- This query shows the daily revenue trend across all sales
SELECT 
    SaleDate,
    SUM(Revenue) AS DailyRevenue
FROM FactSales
GROUP BY SaleDate
ORDER BY SaleDate;

-- KPI 4: Top Performing Products
-- This query identifies the top 3 products by revenue
SELECT TOP 3
    p.ProductName AS Product,
    SUM(s.Revenue) AS TotalRevenue
FROM FactSales s
JOIN DimProducts p ON s.ProductID = p.ProductID
GROUP BY p.ProductName
ORDER BY TotalRevenue DESC;

-- KPI 5: Top Performing Regions
-- This query identifies the top 3 regions by revenue
SELECT TOP 3
    r.RegionName AS Region,
    SUM(s.Revenue) AS TotalRevenue
FROM FactSales s
JOIN DimRegions r ON s.RegionID = r.RegionID
GROUP BY r.RegionName
ORDER BY TotalRevenue DESC;

-- KPI 6: Average Processing Time for Claims
-- This query calculates the average processing time for claims by status
SELECT 
    c.StatusName AS ClaimStatus,
    AVG(fc.ProcessingTime) AS AverageProcessingTime
FROM FactClaims fc
JOIN DimClaimStatus c ON fc.StatusID = c.StatusID
WHERE fc.ProcessingTime IS NOT NULL
GROUP BY c.StatusName
ORDER BY AverageProcessingTime;

-- KPI 7: Revenue Per Day by Region
-- This query calculates daily revenue by region for trend analysis
SELECT 
    r.RegionName AS Region,
    s.SaleDate,
    SUM(s.Revenue) AS DailyRevenue
FROM FactSales s
JOIN DimRegions r ON s.RegionID = r.RegionID
GROUP BY r.RegionName, s.SaleDate
ORDER BY r.RegionName, s.SaleDate;

-- KPI 8: Claim Denial Rate by Payer
-- This query calculates the denial rate of claims for each payer
SELECT 
    p.PayerName AS Payer,
    COUNT(CASE WHEN cs.StatusName = 'Denied' THEN 1 END) * 1.0 / COUNT(*) AS DenialRate
FROM FactClaims fc
JOIN DimPayers p ON fc.PayerID = p.PayerID
JOIN DimClaimStatus cs ON fc.StatusID = cs.StatusID
GROUP BY p.PayerName
ORDER BY DenialRate DESC;

-- KPI 9: Revenue Contribution by Product
-- This query calculates the percentage contribution of each product to total revenue
SELECT 
    p.ProductName AS Product,
    SUM(s.Revenue) AS TotalRevenue,
    SUM(s.Revenue) * 1.0 / (SELECT SUM(Revenue) FROM FactSales) AS RevenueContribution
FROM FactSales s
JOIN DimProducts p ON s.ProductID = p.ProductID
GROUP BY p.ProductName
ORDER BY RevenueContribution DESC;

-- KPI 10: Claim Approval Rate
-- This query calculates the approval rate of claims based on their status
SELECT 
    c.StatusName AS ClaimStatus,
    COUNT(*) AS TotalClaims,
    COUNT(CASE WHEN c.StatusName = 'Approved' THEN 1 END) * 1.0 / COUNT(*) AS ApprovalRate
FROM FactClaims fc
JOIN DimClaimStatus c ON fc.StatusID = c.StatusID
GROUP BY c.StatusName
ORDER BY ApprovalRate DESC;

-- KPI 11: Monthly Revenue Growth
-- This query calculates monthly revenue to analyze growth trends
SELECT 
    FORMAT(RevenueDate, 'yyyy-MM') AS Month,
    SUM(TotalRevenue) AS MonthlyRevenue
FROM FactMonthlyRevenue
GROUP BY FORMAT(RevenueDate, 'yyyy-MM')
ORDER BY Month;
